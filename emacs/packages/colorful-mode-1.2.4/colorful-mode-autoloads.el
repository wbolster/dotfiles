;;; colorful-mode-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from colorful-mode.el

(autoload 'colorful-mode "colorful-mode" "\
Preview any color in your buffer such as hex, color names, CSS rgb in real time.

This is a minor mode.  If called interactively, toggle the `Colorful
mode' mode.  If the prefix argument is positive, enable the mode, and if
it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable the
mode if ARG is nil, omitted, or is a positive number.  Disable the mode
if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate the variable `colorful-mode'.

The mode's hook is called both when the mode is enabled and when it is
disabled.

(fn &optional ARG)" t)
(autoload 'turn-on-colorful-mode "colorful-mode" "\
Turn on `colorful-mode' mode in the current buffer.")
(put 'global-colorful-mode 'globalized-minor-mode t)
(defvar global-colorful-mode nil "\
Non-nil if Global Colorful mode is enabled.
See the `global-colorful-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `global-colorful-mode'.")
(custom-autoload 'global-colorful-mode "colorful-mode" nil)
(autoload 'global-colorful-mode "colorful-mode" "\
Toggle Colorful mode in all buffers.
With prefix ARG, enable Global Colorful mode if ARG is positive;
otherwise, disable it.

If called from Lisp, toggle the mode if ARG is `toggle'.
Enable the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

Colorful mode is enabled in all buffers where `turn-on-colorful-mode'
would do it.

See `colorful-mode' for more information on Colorful mode.

`global-colorful-modes' is used to control which modes this minor mode
is used in.

(fn &optional ARG)" t)
(defvar global-colorful-modes '(prog-mode help-mode html-mode css-mode latex-mode) "\
Which major modes `colorful-mode' is switched on in.
This variable can be either t (all major modes), nil (no major modes),
or a list of modes and (not modes) to switch use this minor mode or
not.  For instance

  (c-mode (not message-mode mail-mode) text-mode)

means \"use this mode in all modes derived from `c-mode', don't use in
modes derived from `message-mode' or `mail-mode', but do use in other
modes derived from `text-mode'\".  An element with value t means \"use\"
and nil means \"don't use\".  There's an implicit nil at the end of the
list.")
(custom-autoload 'global-colorful-modes "colorful-mode" t)
(register-definition-prefixes "colorful-mode" '("colorful-"))

;;; End of scraped data

(provide 'colorful-mode-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; colorful-mode-autoloads.el ends here
