;;; cython-mode-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from cython-mode.el

(add-to-list 'auto-mode-alist '("\\.pyx\\'" . cython-mode))
(add-to-list 'auto-mode-alist '("\\.pxd\\'" . cython-mode))
(add-to-list 'auto-mode-alist '("\\.pxi\\'" . cython-mode))
(let ((loads (get 'cython 'custom-loads))) (if (member '"cython-mode" loads) nil (put 'cython 'custom-loads (cons '"cython-mode" loads)) (put 'languages 'custom-loads (cons 'cython (get 'languages 'custom-loads)))))
(defvar cython-default-compile-format "cython -a %s" "\
Format for the default command to compile a Cython file.
It will be passed to `format' with `buffer-file-name' as the only other argument.")
(custom-autoload 'cython-default-compile-format "cython-mode" t)
(autoload 'cython-mode "cython-mode" "\
Major mode for Cython development, derived from Python mode.

\\{cython-mode-map}

(fn)" t)
(register-definition-prefixes "cython-mode" '("cython-"))

;;; End of scraped data

(provide 'cython-mode-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; cython-mode-autoloads.el ends here
