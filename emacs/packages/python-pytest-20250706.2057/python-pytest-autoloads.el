;;; python-pytest-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from python-pytest.el

 (autoload 'python-pytest-dispatch "python-pytest" nil t)
(autoload 'python-pytest "python-pytest" "\
Run pytest with ARGS.

With a prefix argument, allow editing.

(fn &optional ARGS)" t)
(autoload 'python-pytest-file "python-pytest" "\
Run pytest on FILE, using ARGS.

Additional ARGS are passed along to pytest.
With a prefix argument, allow editing.

(fn FILE &optional ARGS)" t)
(autoload 'python-pytest-file-dwim "python-pytest" "\
Run pytest on FILE, intelligently finding associated test modules.

When run interactively, this tries to work sensibly using
the current file.

Additional ARGS are passed along to pytest.
With a prefix argument, allow editing.

(fn FILE &optional ARGS)" t)
(autoload 'python-pytest-files "python-pytest" "\
Run pytest on FILES, using ARGS.

When run interactively, this allows for interactive file selection.

Additional ARGS are passed along to pytest.
With a prefix argument, allow editing.

(fn FILES &optional ARGS)" t)
(autoload 'python-pytest-directories "python-pytest" "\
Run pytest on DIRECTORIES, using ARGS.

When run interactively, this allows for interactive directory selection.

Additional ARGS are passed along to pytest.
With a prefix argument, allow editing.

(fn DIRECTORIES &optional ARGS)" t)
(autoload 'python-pytest-run-def-at-point-treesit "python-pytest" "\
Run def at point." t)
(autoload 'python-pytest-run-class-at-point-treesit "python-pytest" "\
Run class at point." t)
(autoload 'python-pytest-run-def-or-class-at-point "python-pytest" "\
Run pytest on FILE with FUNC (or class).

Additional ARGS are passed along to pytest.
With a prefix argument, allow editing.

(fn FILE FUNC ARGS)" t)
(autoload 'python-pytest-run-def-or-class-at-point-dwim "python-pytest" "\
Run pytest on FILE using FUNC at point as the node-id.

If `python-pytest--test-file-p' returns t for FILE (i.e. the file
is a test file), then this function results in the same behavior
as calling `python-pytest-run-def-at-point'. If
`python-pytest--test-file-p' returns nil for FILE (i.e. the
current file is not a test file), then this function will try to
find related test files and test defs (i.e. sensible match) for
the current file and the def at point.

Additional ARGS are passed along to pytest.
With a prefix argument, allow editing.

(fn FILE FUNC ARGS)" t)
(autoload 'python-pytest-last-failed "python-pytest" "\
Run pytest, only executing previous test failures.

Additional ARGS are passed along to pytest.
With a prefix argument, allow editing.

(fn &optional ARGS)" t)
(autoload 'python-pytest-repeat "python-pytest" "\
Run pytest with the same argument as the most recent invocation.

With a prefix ARG, allow editing." t)
(register-definition-prefixes "python-pytest" '("python-pytest-"))

;;; End of scraped data

(provide 'python-pytest-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; python-pytest-autoloads.el ends here
